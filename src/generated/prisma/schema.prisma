// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  summaries Summary[]
  projects  Project[] @relation("UserProjects")
}

model Project {
  id          String    @id @default(uuid())
  name        String
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  summaries   Summary[]
  users       User[]    @relation("UserProjects")
}

model Summary {
  id          String       @id @default(uuid())
  text        String
  date        DateTime     @default(now())
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  userId      String
  projectId   String
  user        User         @relation(fields: [userId], references: [id])
  project     Project      @relation(fields: [projectId], references: [id])
  tags        Tag[]        @relation("SummaryTags")
  blockers    Blocker[]    @relation("SummaryBlockers")
  suggestions Suggestion[] @relation("SummarySuggestions")

  @@index([userId])
  @@index([projectId])
  @@index([date])
  @@index([createdAt])
}

model Tag {
  id        String    @id @default(uuid())
  name      String    @unique
  summaries Summary[] @relation("SummaryTags")
}

model Blocker {
  id        String    @id @default(uuid())
  name      String    @unique
  summaries Summary[] @relation("SummaryBlockers")
}

model Suggestion {
  id        String    @id @default(uuid())
  text      String
  summaries Summary[] @relation("SummarySuggestions")
}
